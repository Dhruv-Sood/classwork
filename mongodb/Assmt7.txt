Q1. **Filter Products by Price Range and Stock**:
    - In the `products` collection, find all products with a `price` between $20 and $100 that are also in stock (stock greater than 0).

A1:
db.products.find({
    $and: [
        { price: { $gt: 20, $lt: 100 } },
        { stock: { $gt: 0 } }
    ]
})

Q2. **Qualified Students for Scholarship**:
    - The `students` collection has fields `grade`, `attendance`, and `age`. Find students whose `grade` is greater than 85, `attendance` is more than 90%, or `age` is below 18.

A2:
db.students.find({
    $or: [
        { grade: { $gt: 85 } },
        { attendance: { $gt: 90 } },
        { age: { $lt: 18 } }
    ]
})

Q3. **Filter Jobs by Salary and Location**:
    - In the `jobs` collection, find jobs that have a `salary` above $50,000 and are located in "New York" or "San Francisco".

A3:
db.jobs.find({
    $and: [
        { salary: { $gt: 50000 } },
        { location: { $in: ["New York", "San Francisco"] } }
    ]
})
Q4. **Available Electronics with Discount**:
    - The `inventory` collection has fields `category`, `discount`, and `stock`. Find items in the "electronics" category with a `discount` of at least 10% and that are currently in stock.

A4:
db.inventory.find({
    $and: [
        { category: "electronics" },
        { discount: { $gte: 10 } },
        { stock: { $gt: 0 } }
    ]
})

Q5. **Identify Pending Orders for VIP Customers**:
    - In the `orders` collection, find orders where the `status` is "pending" and either the `customer_type` is "VIP" or the `amount` is greater than $500.

A5:
db.orders.find({
    $and: [
        { status: "pending" },
        { $or: [
            { customer_type: "VIP" },
            { amount: { $gt: 500 } }
        ]}
    ]
})

Q6. **Find Students Exceeding Both Age and Grade Limits**:
    - In the `students` collection, locate students who are over 18 years old and have a `grade` below 60, or whose `attendance` is below 75%.

A6:
db.students.find({
    $or: [
        { $and: [
            { age: { $gt: 18 } },
            { grade: { $lt: 60 } }
        ]},
        { attendance: { $lt: 75 } }
    ]
})

Q7. **Special Offers on Furniture**:
    - The `products` collection includes `category`, `price`, and `availability`. Find furniture items priced below $200 or that are available in limited stock (stock less than 5).

A7:
db.products.find({
    $and: [
        { category: "furniture" },
        { $or: [
            { price: { $lt: 200 } },
            { stock: { $lt: 5 } }
        ]}
    ]
})
Q8. **Available Software and Services**:
    - In the `items` collection, filter for items where the `type` is "software" or "service" and where the `price` is less than $100.

A8:
db.items.find({
    $and: [
        { type: { $in: ["software", "service"] } },
        { price: { $lt: 100 } }
    ]
})

Q9. **Filter Employees by Experience or Department**:
    - The `employees` collection has `experience` in years and `department`. Find employees with more than 5 years of experience in "Engineering" or "HR" departments.

A9:
db.employees.find({
    $and: [
        { experience: { $gt: 5 } },
        { department: { $in: ["Engineering", "HR"] } }
    ]
})

Q10. **Urgent Orders for High-Value Products**:
    - In the `orders` collection, find orders where `status` is "urgent" and the `total_amount` is greater than $1000, or the `priority` level is "high".

A10:
db.orders.find({
    $or: [
        { $and: [
            { status: "urgent" },
            { total_amount: { $gt: 1000 } }
        ]},
        { priority: "high" }
    ]
})